services:
  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./customer
    #       target: /code
    # container_name: customer
    hostname: customer
    scale: 2
    ports:
      - 5001
    # depends_on:
    #   - nosql-db
    #   - message-queue
    environment:
      NODE_ENV: 'prod'
      PORT: 5001
    volumes:
      - .:/app
      - /app/customer/node_modules
  
  product:
    build:
      dockerfile: Dockerfile
      context: ./product
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./product
    #       target: /code
    # container_name: product
    hostname: product
    scale: 2
    ports:
      - 5002
    # depends_on:
    #   - nosql-db
    #   - message-queue
    environment:
      NODE_ENV: 'prod'
      PORT: 5002
    volumes:
      - .:/app
      - /app/product/node_modules
  
  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./shopping
    #       target: /code
    # container_name: shopping
    hostname: shopping
    scale: 2
    ports:
      - 5003
    # depends_on:
    #   - nosql-db
    #   - message-queue
    environment:
      NODE_ENV: 'prod'
      PORT: 5003
    volumes:
      - .:/app
      - /app/shopping/node_modules
  
  nginx-proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: nginx-proxy
    depends_on:
      - product
      - shopping
      - customer
    ports:
      - 80:80
  